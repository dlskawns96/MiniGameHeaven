create database network_minigameheaven;
use network_minigameheaven;
create table USER(user_id varchar(20), user_pw varchar(20) not null, name varchar(10) not null,rankColor varchar(10) default 'White',cloverNum int default 0,time_signup date, logined boolean default false,primary key(user_id),check(rankColor in 'White','Gold','Silver','Bronze','Red')));
create table userlist(user_id varchar(20),user_pw varchar(20),login_state varchar(20),user_state varchar(10),time_banned int,totaluser int,primary key(user_id),foreign key(user_id)references user(user_id));
create table game(game_id varchar(10)primary key,game_title varchar(50) not null,MAXplayer int not null,MAXcrowd int default 10,clovercost int not null,developer_id varchar(20) not null,constraint fk_id foreign key(developer_id) references user(user_id) on update cascade);
create table ranking(game_id varchar(10),user_id varchar(20),rank varchar(5) not null,score int default 0,constraint fk_id foreign key(game_id) references game(game_id),constraint fk_id foreign key(user_id) references user(user_id),unique(game_id,user_id,rank));
create table login(status_checked boolean default false,state varchar(15),bannedTime int default 0,check(state in ('logined','game_waiting','game_waiting','game_playing','game_watching','others')));
insert into login(state) values ('logined');
insert into login(state) values ('game_creating');
insert into login(state) values ('game_waiting');
insert into login(state) values ('game_playing');
insert into login(state) values ('game_watching');
insert into login(state) values ('others');
create table user_logined(user_id varchar(20),rankColor varchar(10) default 'White',status_checked boolean default false,state varchar(15),bannedTime int default 0);
insert into user_logined select user_id,rankColor,status_checked,state, bannedTime from user,login where logined is true;
create view userlist_logined as select user_id,rankColor,state,bannedTime from user_logined where status_checked is true;
create table room(room_id varchar(20)primary key,room_name varchar(50) default 'new game room',game_id varchar(10) not null,room_pw varchar(20),creater_id varchar(20) not null);
alter table room add constraint foreign key(game_id) references game(game_id);
alter table room add constraint foreign key(creater_id) references user(user_id);
create table player(room_id varchar(20) not null,player_id varchar(20)primary key,constraint fk_id foreign key(room_id) references room(room_id),constraint fk_id foreign key(player_id) references user(user_id));
create table watcher(room_id varchar(20),watcher_id varchar(20)primary key,betNum int default 0,constraint fk_id foreign key(room_id) references room(room_id),constraint fk_id foreign key(watcher_id) references user(user_id));
create table room_state(roomstate varchar(10)primary key,status_checked boolean default false,locked boolean default false);
insert into room_state(roomstate) values('waiting');
insert into room_state(roomstate) values('playing');
insert into room_state(roomstate) values('closed');
insert into room_state(roomstate) values('new room');
create table room_created(game_id varchar(10),room_id varchar(20),room_name varchar(50) default 'new game room',status_checked boolean default false,roomstate varchar(10) default 'new room',room_pw varchar(20),locked boolean default false,MAXplayer int not null,MAXcrowd int not null,creater_id varchar(20) not null,unique(room_id,roomstate));
alter table room_created add constraint foreign key(game_id) references room(game_id);
alter table room_created add constraint foreign key(room_id) references room(room_id);
insert into room_created(game_id,room_id,room_name,status_checked,roomstate,locked,creater_id) (select game_id,room_id,room_name,status_checked,roomstate,locked,creater_id from room,room_state);
update room_created set MAXplayer= (select game.MAXplayer from game where game.game_id=room_created.game_id) where exists (select * from game where game.game_id=room_created.game_id);
update room_created set MAXcrowd= (select game.MAXcrowd from game where game.game_id=room_created.game_id) where exists (select * from game where game.game_id=room_created.game_id);
update room_created set room_pw= (select room.room_pw from room where room_created.locked and room_created.room_id=room.room_id) where exists (select * from room where room.room_id=room_created.room_id);
create view roomlist as select game_id,room_id,room_name,roomstate,room_pw,locked,MAXplayer,MAXcrowd,creater_id from room_created where status_checked is true;
create table player_room(room_id varchar(20) not null,MAXplayer int,player_id varchar(20) not null,unique(room_id,player_id));
alter table player_room add constraint foreign key(room_id) references room(room_id);
alter table player_room add constraint foreign key(player_id) references user(user_id);
create table watcher_room(room_id varchar(20) not null,MAXwatcher int,watcher_id varchar(20) not null,betNum int default 0,unique(room_id,watcher_id));
alter table watcher_room add constraint foreign key(room_id) references room(room_id);
alter table watcher_room add constraint foreign key(watcher_id) references user(user_id);